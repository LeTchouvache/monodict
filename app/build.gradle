// https://github.com/excilys/androidannotations/wiki/Building-Project-Gradle

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // http://stackoverflow.com/questions/24088275/android-studio-after-updating-to-build-tools-19-1-0
        classpath 'com.android.tools.build:gradle:0.12.2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    apt 'org.androidannotations:androidannotations:3.0.1'

    androidTestCompile 'com.jayway.android.robotium:robotium-solo:4.3'
    compile 'org.androidannotations:androidannotations-api:3.0.1'
    compile 'com.google.code.gson:gson:2.2.4@jar'
    compile 'com.j256.ormlite:ormlite-core:4.47@jar'
    compile 'com.j256.ormlite:ormlite-android:4.47@jar'
    compile 'commons-io:commons-io:2.4'
    compile 'com.mobsandgeeks:android-saripaar:1.0.2'
    compile 'com.android.support:support-v13:19.0.1'
}

apt {
    arguments {
        androidManifestFile variant.processResources.manifestFile
        resourcePackageName 'com.github.wakhub.monodict'
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 13
        versionName '2.0.0'

        ndk {
            moduleName 'monodict'
        }
    }

    signingConfigs {
        release {
        }
    }

    buildTypes {
        release {
            debuggable false
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }
}

File signingPropertiesFile = rootProject.file('credentials/release.keystore.properties')
if (signingPropertiesFile.exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(signingPropertiesFile))
    android.signingConfigs.release.storeFile = file(props.storeFile)
    android.signingConfigs.release.storePassword = props.storePassword
    android.signingConfigs.release.keyAlias = props.keyAlias
    android.signingConfigs.release.keyPassword = props.keyPassword
}

